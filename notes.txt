HTML LESSONS: https://www.youtube.com/watch?v=Y86zzWRle3g&list=PLURN6mxdcwL_D8H1iki2YCmp-lNyNAdbz

HTML dosyasını açmak için komut: CTRL + SHIFT + V
Eşittir shift + 0

dotted, dashed, solid, double, groove, ridge, inset, outset= BORDER ÖRNEK KULLANIMI İÇİN

border radious kenarları eğmek için, tam yuvarlak içinse 50% yap
sabit genişlik için 100px, tarayıcı genişliği için 50% yap

En dış nesneyle bir nesne arasındaki boşluğu ayarlamak için 
margin-top=üst ÖRNEK margin-top=:60px;
margin-bottom=alt
margin-left= sol

text align= metni hizalar LEFT,RİGHT,CENTER
font weight=yazıyı kalınlaştırır BOLD
font family=yazının tipini değiştirir
font style= yazıyı italik yapar
text transform= yazının bütün harflerini büyültüp(UPPERCASE) küçültebilir (LOWERCASE)
letter spacing 2px= harfler arası boşluk bırakır
text decoration= yazının altını,üstünü çizer
word spacing 3px= kelimelerin arasını açar

<form style="text-align: center;"> <!--Bu özellik, bir öğenin içindeki metni sağa ve sola doğru merkezlemek için kullanılır. -->

 "position: static" kullanıldığında,
  öğe normal akışta yer alır. Yani, öğe, sayfanın normal akışında bulunan diğer öğelerin etrafında yer alır

  position relative top 10px left 20px öğe normal akıştaki yerini alır, ancak bu yerden belirli bir uzaklıkta ötelenir.

  position fixed  öğenin sayfanın görünen kısmına 
  göre sabit bir konumda kalmasını sağlar, yani kullanıcı sayfayı kaydırdıkça öğe hareket etmez

* etiketini kullanırsan css dosyalarını hepsini seçer

th, td{örnek} dersen sadece o ikisini seçer

div>p parenti div olan bütün p,leri seçer

float: right CSS özelliği, bir öğeyi sağa yaslamak için kullanılır. 
Bu özellik, öğeyi normal akıştan çıkarır ve belirtilen yönde (bu durumda sağa) konumlandırır.
Genellikle metin veya resim gibi içerik öğelerini yan yana düzenlemek veya sayfa içeriğini sarma (wrap) amacıyla kullanılır

BORDER-COLLAPSE: COLLAPSE YAPARSAK ÇİFT BORDERLAR TEK BORDER,A DÖNÜŞÜR

overflow scroll asagı yukarı taşma olsa da olmasa da ekler, overflow auto sadece taşıyosa ekler

yatay menü için display inline-block etiketini kullan

color tag'ında ki rgba saydamlık verir

* çarpma işemi
/ bölme işlemi
++ bir sayı arttır
--bir sayı azalt
** matematikde ki üssü işareti
== : matematikdeki Eşittir ile aynı
=== : hem tipleri hemde değerlerinin eşit olup olmadığına bakar
+= sayıya eklemek istediğimiz kadar ekleriz
alt shıft s kodları duzenlı hale getırır
&& : VE birden fazla koşul olduğunda ve hepsi true olursa koşulu sağlar
|| : VEYA sonuçtan biri true ise sonucu true çıkartır
! : bir şeyin zıttını almak için 
!=  : eşit değildir anlamında


 bir web sitesinde gezinme menüsü


 ---
 GİT KOMUTLARI
değişiklikleri ekle

 - git add *

-  değişiklikleri kaydet

 git commit -m "commit mesajın neyse onu yaz"

-  değişiklikleri gönder

 git push

GIT DURUM GÖRÜNTÜLE

git status

değişiklikleri uzaktan getir
git pull

switch (içerisine bir değer alır) derleyici aşağıya aldığı değer hangi case'le eşit ona bakar. eşit olanı çalıştırır. 

string değerini number'a çevirmek için parseInt ya da let değer = Number (farklı bir değer)

numberdan string tipini dönüştürmek için toString();

tooltip visualdaji elementlerin yanında açılan bilgi

debugger yazilan kodlari adim adım çalıştırmak için

DEGİSKENLER
for (degisken; koşul ; arttırma-azalma){

//kodlar
}

ÖRNEK
for(let i=1; 1<=10; i++){
console.log(i);
}

while(koşul) {
//kodlar
} koşul sağlamazsa yani true olmazsa kod çalışmaz

do{
//kodlar
}while(koşul); koşul sağlamasa bile true olmasa bile kod 1 kere çalışır

break= döngüyü kırmak için
continue= döngüyü bir kere kırmak için

math.floor= küsuratı atar, çevirir

function metodu
function yazdir (isim, soyisim){
console.log (isim +" "+soyisim);
}
yazdir ("zehra", "nur");

innerHTML özelliği, bir öğenin içeriğini değiştirmek için kullanılır

:-webkit-scrollbar {
width} kaydırma çubuğu genişliği

:-webkit-scrollbar-thumb {
background-color:} kaydırma çubuğu rengi

:-webkit-scrollbar-track {
background-color:} kaydırma çubuğu arka plan rengi

flex-direction: column; öğeler yukarıdan aşağıya doğru birbirinin altına sıralanır

MARGİN= ÖĞE İLE DİĞER ÖĞELER ARASINDAKİ UZAKLIĞI TEMSİL EDER

MARGİN-TOP= SADECE ÜST KISIMDAN BOŞLUK BIRAKIR

MARGİN-BOTTOM= BİR ÖĞENİN ALT KISMINDAKİ BOŞLUĞU İFADE EDER VE BH BOŞLUK BİR SONRAKİ ÖĞEYLE ARASINDAKİ DİKEY UZAKLIĞI İFADE EDER

PADDİNG= BİR ÖĞENİN İÇİNDEKİ İÇERİĞİN KENARLARDAN NE KADAR UZKATA OLACAĞINI BELİRLER

PADDİNG-TOP= ÖĞENİN ÜST KISMINDAKİ İÇ BOŞLUĞU BELİRLER

PADDİNG BOTTOM=ÖĞENİN ALT KISMINDAKİ İÇ BOŞLUĞU BELİRLER

position:relative= belirtilen degerlere göre ayarlansın diye

opacity: 0 tamamen şeffafken 1 tamamen opak

sessionStorage.setItem("350", "zehra"); değer atar
sessionStorage.removeItem değer siler
sessionStorage.clear(); tüm değerleri siler
sessionStorage.getItem(); herhangi bir değeri almak için
.
.
.
.
.
.
.
.

bir kayıt ol ekranı yap, giriş yap ekranındayken kayıt ol butonu o butona basıldığında kayıt ekranına gidecek
kişi kayıt yaptığında kullanıcı adı ve şifresi local storage e kaydolacak eğer kayıtlı kullanıcı adı ve şifresi varsa 
kayıt ol butonuna bastığında zaten böyle bir kullanıcı var diyecek ve kayıt ekranına geçmeyecek. şifremi unuttum butonu olacak
bu butona basıldığında şifrenizi sıfırlamak için kullanıcı adınızı giriniz yazacak. kullanıcı adı doğru girildiyse 
2 kere şifre girme inputu koy. şifre giy ve onayla inputlar eşleşiyosa şifreyi local storage kaydet. kullanıcıyı login ekranına tükür

giriş yapabilirse welcome ekranında hesabımı sil butonu olacak basıldığında confirm ekranı çıkacak onay verirse
localstorage den tüm bilgileri silinecek

kullanıcının giriş yaptığı zaman bilgisi local storagee kaydedilecek eğer 10 saniye geçtiyse tekrar login sayfası çıkacak

ve her login olduğunda zaman bilgisi güncellenecek

isConfirmed = confirm(“Hesabınızı gerçekten silmek istiyor musunuz?”) confirm ekranı oluşturmak için
 if (isConfirmed) 

 let now = new Date()   şimdiki zamanı oluşturur anlık zaman


localStorage.setItem(“lastLoginDate”, now.toISOString())  localstoragea lastlogin date isminde, now paramtresini stringe çevirerek veri yazar

 let lastLoginDateString = localStorage.getItem(“lastLoginDate”) localstoragedan lastlogin date bilgisinin string değerini alır 

 let lastLoginDate = new Date(lastLoginDateString)   186yı tarih bilgisine çevirir

tarih2ye anlık zamanı al, tarih1e lastLoginDate al

saniyeFarki = Math.abs((tarih2 - tarih1) / 1000) İKİ TArih arasındaki farkı alır 1000e bölüp saniyeye çevirir

substring verilen metini kopyalar yeni bir içerik oluşturur merhaba.subbstring => merhaba merhaba